services:
  arquisis-database:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: on-failure

  arquisis-api:
    image: api:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8001-8003:8000"
    depends_on:
      - arquisis-database
      - arquisis-publisher
    environment:
      ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@arquisis-database:5432/${POSTGRES_DB_NAME}
      POST_TOKEN: ${POST_TOKEN}
      PATH_FIXTURES: ${PATH_FIXTURES}
      PATH_REQUESTS: ${PATH_REQUESTS}

      PUBLISHER_HOST: arquisis-publisher
      PUBLISHER_PORT: 7999

      GROUP_ID: ${GROUP_ID}

      BET_PRICE: 1000
      BET_LIMIT: 40
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  arquisis-listener:
    image: listener:latest
    build:
      context: ./listener
      dockerfile: Dockerfile
    depends_on:
      - arquisis-api
    environment:
      ENV: production

      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}

      PATH_FIXTURES: ${PATH_FIXTURES}
      PATH_REQUESTS: ${PATH_REQUESTS}
      POST_TOKEN: ${POST_TOKEN}
      API_HOST: arquisis-api
      API_PORT: 8000
    restart: on-failure
  
  arquisis-publisher:
    image: publisher:latest
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      ENV: production

      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}

      POST_TOKEN: ${POST_TOKEN}
    restart: on-failure

volumes:
  db_data:
