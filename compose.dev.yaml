services:
  arquisis-database:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: on-failure

  arquisis-api:
    image: api:latest
    build:
      context: ./
      dockerfile: ./api/Dockerfile
    volumes:
      - ./api/app:/api/app
      - ./db:/api/db
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - "8001:8000"
    depends_on:
      - arquisis-database
      - arquisis-publisher
      - arquisis-jobs-master
    environment:
      ENV: ${ENV}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@arquisis-database:5432/${POSTGRES_DB_NAME}
      POST_TOKEN: ${POST_TOKEN}
      PATH_FIXTURES: ${PATH_FIXTURES}
      PATH_REQUESTS: ${PATH_REQUESTS}
      PATH_USERS: ${PATH_USERS}
      PATH_AUCTIONS: ${PATH_AUCTIONS}
      PATH_DISCOUNTS: ${PATH_DISCOUNTS}

      PUBLISHER_HOST: arquisis-publisher
      PUBLISHER_PORT: 7999

      JOBS_MASTER_HOST: arquisis-jobs-master
      JOBS_MASTER_PORT: 7998

      GROUP_ID: ${GROUP_ID}

      BET_PRICE: 1000
      BET_LIMIT: 40

      SESSION_ID: ${SESSION_ID}
      TRANSBANK_REDIRECT_URL: ${TRANSBANK_REDIRECT_URL}

      EMAIL: ${EMAIL}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}

      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    restart: on-failure

  arquisis-listener:
    image: listener:latest
    build:
      context: ./listener
      dockerfile: Dockerfile
    depends_on:
      - arquisis-api
    environment:
      ENV: ${ENV}

      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}

      PATH_FIXTURES: ${PATH_FIXTURES}
      PATH_REQUESTS: ${PATH_REQUESTS}
      PATH_AUCTIONS: ${PATH_AUCTIONS}
      POST_TOKEN: ${POST_TOKEN}
      API_HOST: arquisis-api
      API_PORT: 8000
    restart: on-failure

  arquisis-publisher:
    image: publisher:latest
    build:
      context: ./publisher
      dockerfile: Dockerfile
    environment:
      ENV: ${ENV}

      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}

      POST_TOKEN: ${POST_TOKEN}
    restart: on-failure

  arquisis-jobs-master:
    image: jobs-master:latest
    build:
      context: ./
      dockerfile: ./jobs_master/Dockerfile
    command: uvicorn producer:app --reload --host 0.0.0.0 --port 7998
    volumes:
      - ./jobs_master:/opt/
      - ./db:/opt/db
    environment:
      ENV: ${ENV}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@arquisis-database:5432/${POSTGRES_DB_NAME}
      CELERY_BROKER_URL: redis://redis-broker:6379/0
      CELERY_RESULT_BACKEND: redis://redis-broker:6379/0
      GROUP_ID: ${GROUP_ID}
    restart: on-failure
    depends_on:
      - redis-broker
      - arquisis-database

  redis-broker:
    image: redis:7
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf

  consumer:
    build:
      context: ./
      dockerfile: ./jobs_master/Dockerfile
    command: celery -A consumer.celery_app worker --loglevel=INFO --purge --concurrency=1
    volumes:
      - ./jobs_master:/opt/
      - ./db:/opt/db
    depends_on:
      - arquisis-jobs-master
    environment:
      ENV: ${ENV}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@arquisis-database:5432/${POSTGRES_DB_NAME}
      CELERY_BROKER_URL: redis://redis-broker:6379/0
      CELERY_RESULT_BACKEND: redis://redis-broker:6379/0
      GROUP_ID: ${GROUP_ID}

volumes:
  db_data:
